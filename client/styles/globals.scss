@import "./select-box.scss";

// Variables
$background: #efefef;
$lfs-blue: #006ac6;
$lfs-yellow: #fab700;
$lfs-grey: #75787b;
$breakpoint-x-small: 	480px;
$breakpoint-smaller: 	640px;
$breakpoint-small: 		768px;
$breakpoint-medium: 	992px;
$breakpoint-large: 		1200px;

$breakpoints: (
	'x-small': 		(min-width: $breakpoint-x-small),
	'x-small-max': 	(max-width: $breakpoint-x-small - 1),
	'smaller': 		(min-width: $breakpoint-smaller),
	'smaller-max': 	(max-width: $breakpoint-smaller - 1),
	'small': 		(min-width: $breakpoint-small),
	'small-max': 	(max-width: $breakpoint-small - 1),
	'medium': 		(min-width: $breakpoint-medium),
	'medium-max': 	(max-width: $breakpoint-medium - 1),
	'large': 		(min-width: $breakpoint-large),
	'large-max': 	(max-width: $breakpoint-large - 1),
	'landscape': 	(orientation: landscape),
	'portrait': 	(orientation: portrait),
);

$breakpoints-grid: (
	'xsm': 	'x-small',
	'sml': 	'smaller',
	'sm': 	'small',
	'md': 	'medium',
	'lg': 	'large'
);

$grid-col-count: 12;
$global-glutter: 20px;

// Mixins
@mixin respond-to($breakpoint) {
    $raw-query: map-get($breakpoints, $breakpoint);

    @if $raw-query {
        $query: if(type-of($raw-query) == 'string', unquote($raw-query), inspect($raw-query));

        @media #{$query} {
            @content;
        }
    } @else {
        @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
    }
}

@mixin clearfloat {
    &:after {
        content: '';
        clear: both;
        display: table;
    }
}

// Box sizing reset
* {
	box-sizing: border-box;
	&:before,
	&:after {
		box-sizing: inherit;
	} 
}


html,
body {
  padding: 0;
  background-color: $background;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
  Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
}

.container {
	width: 100%;
	margin-left: auto;
	margin-right: auto;
	padding-left: #{$global-glutter/2};
	padding-right: #{$global-glutter/2};
	@include respond-to('small') {
		width: calc(#{$breakpoint-small});
	}

	@include respond-to('medium') {
		width: calc(#{$breakpoint-medium});
	}

	@include respond-to('large') {
		width: calc(#{$breakpoint-large});
	}

  &--full {
    width: 100%;
  }
}

.grid-row {
  @include clearfloat();
  margin-left: #{-1*$global-glutter/2};
  margin-right: #{-1*$global-glutter/2};
  width: auto;

  &__col {
    float: left;
    padding-left: #{$global-glutter/2};
    padding-right: #{$global-glutter/2};
    width: 100%;

    @each $name, $breakpoint in $breakpoints-grid {
      @include respond-to($breakpoint) {
        @for $i from 1 through $grid-col-count {
          &--#{$name}-#{$i} {
            width: #{($i/$grid-col-count)*100%};
          }
        }

        &--#{$name}-hidden {
          display: none;
        }
      }
    }
  }
}

.form {
  &__label {
    display: block;
    font-weight: bold;
    
    &--error {
      color: red;
    }
  }
  
  &__input, &__select {
    border: 1px solid grey;
    width: 100%;
    padding: 5px;
    margin-bottom: $global-glutter;
    outline: 0;
    
    &:hover {
      box-shadow: 0 1px 2px 0 rgba(blue, 0.2);
    }
    
    &:focus {
      box-shadow: 0 1px 3px 0 rgba(blue, 0.5);
    }
    
    &--error {
      border-color: red;
    }
  }
  
  &__button {
    text-align: right;
    
    &--center {
      text-align: center;
    }
    
    &--left {
      text-align: left;
    }
    
  }
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

.navigation {
  margin-top: 2%;
  display: flex;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;

  &__logo {
    width: 14rem;
    height: 14rem;
    border-radius: 50%;
    display: block;
  }
}

.main {
  margin-top: 20px;
}

.add-item {
  &__shirt, &__pants {
    input, select {
      margin-right: 10px;
      margin-left: 5px;
    }
  }
}

.panel {
  margin-bottom: 20px;
  background-color: white;
  border: 1px solid lightgray;
  border-radius: 4px;
  overflow: auto;

  &_header {
    padding: 10px 15px;
    background-color: lig;
    color: darkgray;
    border-color: lightgray;
    border-bottom: 1px solid transparent;
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
  }

  &_body {
    padding: 15px;
  }
}

.table {
  width: 100%;
  border-spacing: 0;
  border-collapse: collapse;

  caption {
    text-transform: uppercase;
    font-weight: bold;
    color: $lfs-yellow;
    text-align: center;
    padding-top: 8px;
    padding-bottom: 8px;
  }

  thead {
    border-top: 2px solid $lfs-yellow;
    border-bottom: 2px solid $lfs-yellow;

    th {
      text-transform: uppercase;
      text-align: center;
      padding: 10px;
      color: $lfs-blue;
      border: 1px solid #F1F1F1;
    }
  }

  tbody {
    tr {
      border-bottom: 1px solid #F1F1F1;
      color: $lfs-grey;
      td {
        padding: 10px;
        border: 1px solid #F1F1F1;
        text-align: center;
      }
      th {
        padding-left: 10px;
        border: 1px solid #F1F1F1;
      }
    }
  }

  tfoot {
    color: $lfs-yellow;
    font-style: italic;
    border-bottom: 2px solid $lfs-yellow;
    tr {
      td {
        padding: 10px;
        border: 1px solid #F1F1F1;
      }
    }
  }
}

.btn {
	padding: .5em 2em;
	border: 0;
	font-size: 1.1em;
  color: #fff;
  margin-top: .3em;
  margin-bottom: .3em;
  display: inline-block;

  &:hover {
    transform: translateY(-2px);
    cursor: pointer;
    transition: all;
  }

  &.btn--primary {
    background-color: #0e48e7;
  }

  &.btn--delete {
    background-color: #dd0d4b;
  }
}

.custom-select {
  @include select-box();
}
